import java.awt.EventQueue;
import java.sql.*;
import java.time.Clock;
import java.time.LocalDateTime;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JTextPane;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class Guard extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Guard frame = new Guard();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 * @throws Exception 
	 */
	public Guard() throws Exception {
		Connection conn = DbConnection.database();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JButton btnBack = new JButton("Back");
		btnBack.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				dispose();
				visitor vs = null;
				try {
					vs = new visitor();
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				vs.setVisible(true);
			}
		});
		btnBack.setBounds(324, 227, 89, 23);
		contentPane.add(btnBack);
		
		JComboBox comboTicketGuard = new JComboBox();
		comboTicketGuard.setBounds(82, 32, 275, 22);
		contentPane.add(comboTicketGuard);
		
		JButton btnEnter = new JButton("Enter");
		
		
		btnEnter.setBounds(82, 195, 89, 23);
		contentPane.add(btnEnter);
		
		JButton btnLeave = new JButton("Leave");
		btnLeave.setBounds(181, 195, 89, 23);
		contentPane.add(btnLeave);
		
		JTextPane txtGuardDetails = new JTextPane();
		txtGuardDetails.setEditable(false);
		txtGuardDetails.setBounds(82, 53, 275, 132);
		contentPane.add(txtGuardDetails);
		
		JButton btnDnT = new JButton("Did Not Turn Up");
		btnDnT.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
			}
		});
		btnDnT.setBounds(280, 195, 114, 23);
		contentPane.add(btnDnT);
		String approve = "Approved";
		PreparedStatement stm = conn.prepareStatement("select ticketid from user_request where status = ? ");
		stm.setString(1, approve);
		ResultSet rs = stm.executeQuery();
		while(rs.next()) {
			String id = rs.getString("ticketid");
			comboTicketGuard.addItem(id);
		}
		
		comboTicketGuard.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent e) {
				try {
					
				if (comboTicketGuard.getSelectedItem()!=null) {
					PreparedStatement statement = conn.prepareStatement("select name,ic,phone,purpose,tov,dov,entertime,leavetime from user_request where ticketid = ?");
					statement.setString(1, comboTicketGuard.getSelectedItem().toString());  
					ResultSet  rs = statement.executeQuery();
					
					
					String details = "";
					while(rs.next()) {
						String name = rs.getString("name");
						String ic = rs.getString("ic");
						String phone = rs.getString("phone");
						String purpose = rs.getString("purpose");
						String tov = rs.getString("tov");
						String dov = rs.getString("dov");
						String entertime = rs.getString("entertime");
						String leavetime = rs.getString("leavetime");
						if(rs.wasNull()) {
							entertime="Not Set.";
							leavetime="Not Set.";
							btnEnter.setEnabled(true);
						}
						if(rs.getString("leavetime") == null && rs.getString("entertime")== null) {
							btnLeave.setEnabled(false);
							btnEnter.setEnabled(true);
							entertime = rs.getString("entertime");	
						}
						else if(rs.getString("leavetime") != null && rs.getString("entertime")!= null) {
							btnLeave.setEnabled(false);
							btnEnter.setEnabled(false);
						}
						else {
							btnLeave.setEnabled(true);
							btnEnter.setEnabled(false);
							leavetime =  rs.getString("leavetime");
						}
						
						 details = "Name: "+name +"\n"+"IC: " +ic +"\n"+"Phone Num: " +phone +"\n"+"Purpose of Visit : " +purpose +"\n"+"Time of Visit : " +tov +"\n"+"Date of Visit : " +dov +"\n Enter Time:" +entertime+ "\n Leave Time:"+leavetime  ;
					}
					
					txtGuardDetails.setText(details);
				}
				
			} catch (Exception e1) {
			// TODO Auto-generated catch block
				e1.printStackTrace();
			}				
				
			}
		});
		btnEnter.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				
				int getEnterHour= LocalDateTime.now().getHour();
				int getEnterMinute = LocalDateTime.now().getMinute();
				String getEnterTime = getEnterHour+":"+getEnterMinute;
				System.out.println(getEnterTime);
				int updateEnter = JOptionPane.showConfirmDialog(null, "Are you sure you want to enter the time?");
				if(updateEnter==0) {
				try {
					
					PreparedStatement statement = conn.prepareStatement("update user_request set entertime= ? where ticketid= ?");
					statement.setString(1, getEnterTime);
					statement.setInt(2, Integer.parseInt(comboTicketGuard.getSelectedItem().toString()));
					statement.execute();
					PreparedStatement stm = conn.prepareStatement("select ticketid from user_request where status = ? ");
					stm.setString(1, approve);
					ResultSet rs = stm.executeQuery();
					comboTicketGuard.removeAllItems();
					while(rs.next()) {
						String id = rs.getString("ticketid");
						comboTicketGuard.addItem(id);
					}
					
				}
				
				catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				}
			}
		});
		btnLeave.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				int getLeaveHour= LocalDateTime.now().getHour();
				int getLeaveMinute = LocalDateTime.now().getMinute();
				String getLeaveTime = getLeaveHour+":"+getLeaveMinute;
				System.out.println(getLeaveTime);
				int updateLeave = JOptionPane.showConfirmDialog(null, "Are you sure you want to enter the time?");
				if(updateLeave==0) {
				try {
					
					PreparedStatement statement = conn.prepareStatement("update user_request set leavetime= ? where ticketid= ?");
					statement.setString(1, getLeaveTime);
					statement.setInt(2, Integer.parseInt(comboTicketGuard.getSelectedItem().toString()));
					statement.execute();
					PreparedStatement stm = conn.prepareStatement("select ticketid from user_request where status = ? ");
					stm.setString(1, approve);
					ResultSet rs = stm.executeQuery();
					comboTicketGuard.removeAllItems();;
					while(rs.next()) {
						String id = rs.getString("ticketid");
						comboTicketGuard.addItem(id);
					}
				
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
			}
		});
		
		

	}
}
